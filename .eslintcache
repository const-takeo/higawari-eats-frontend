[{"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/App.tsx":"1","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/reportWebVitals.ts":"2","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/routers/logged-out-router.tsx":"3","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/apollo.ts":"4","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/routers/logged-in-router.tsx":"5","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/login.tsx":"6","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/index.tsx":"7","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/create-account.tsx":"8","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/form-error.tsx":"9","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/button.tsx":"10","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/404.tsx":"11","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/client/restaurants.tsx":"12","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/header.tsx":"13","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/user/confirm-email.tsx":"14","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/hooks/useMe.tsx":"15","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/user/edit-profile.tsx":"16","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/restaurant.tsx":"17","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/client/search.tsx":"18","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/constants.ts":"19","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/__generated__/globalTypes.ts":"20","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/fragments.ts":"21","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/client/category.tsx":"22"},{"size":588,"mtime":1611482864802,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1611383438987,"results":"25","hashOfConfig":"24"},{"size":584,"mtime":1611623515161,"results":"26","hashOfConfig":"24"},{"size":1041,"mtime":1611576566412,"results":"27","hashOfConfig":"24"},{"size":1600,"mtime":1613715720959,"results":"28","hashOfConfig":"24"},{"size":4311,"mtime":1613479691338,"results":"29","hashOfConfig":"24"},{"size":619,"mtime":1611415477967,"results":"30","hashOfConfig":"31"},{"size":4836,"mtime":1613711181835,"results":"32","hashOfConfig":"24"},{"size":239,"mtime":1611672055964,"results":"33","hashOfConfig":"24"},{"size":506,"mtime":1611666849342,"results":"34","hashOfConfig":"24"},{"size":690,"mtime":1613023633564,"results":"35","hashOfConfig":"24"},{"size":3888,"mtime":1613717834282,"results":"36","hashOfConfig":"24"},{"size":1571,"mtime":1611667064143,"results":"37","hashOfConfig":"24"},{"size":2161,"mtime":1613023676199,"results":"38","hashOfConfig":"24"},{"size":311,"mtime":1611630339155,"results":"39","hashOfConfig":"24"},{"size":3676,"mtime":1613023712379,"results":"40","hashOfConfig":"24"},{"size":586,"mtime":1613582302912,"results":"41","hashOfConfig":"24"},{"size":1533,"mtime":1613714291778,"results":"42","hashOfConfig":"24"},{"size":52,"mtime":1611571007862,"results":"43","hashOfConfig":"24"},{"size":1077,"mtime":1613717986641,"results":"44","hashOfConfig":"24"},{"size":382,"mtime":1613717791782,"results":"45","hashOfConfig":"24"},{"size":1104,"mtime":1613718127644,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1uta326",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1o4rm3h",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/App.tsx",[],["103","104"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/reportWebVitals.ts",[],["105","106"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/routers/logged-out-router.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/apollo.ts",[],["107","108"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/routers/logged-in-router.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/login.tsx",["109"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/index.tsx",[],["110","111"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/create-account.tsx",["112"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/form-error.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/button.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/404.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/client/restaurants.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/header.tsx",[],["113","114"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/user/confirm-email.tsx",["115","116","117","118"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  verifyEmail,\n  verifyEmailVariables,\n} from \"../../__generated__/verifyEmail\";\n\nconst VERIFY_EMAIL_MUTATION = gql`\n  mutation verifyEmail($input: VerifyEmailInput!) {\n    verifyEmail(input: $input) {\n      error\n      ok\n    }\n  }\n`;\n\nexport const ConfirmEmail = () => {\n  const history = useHistory();\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n  const onCompleted = (data: verifyEmail) => {\n    const {\n      verifyEmail: { error, ok },\n    } = data;\n    if (ok && userData?.me.id) {\n      //cacheを直接じゃなくてrefetchしてアップデートする方法\n      // await refetch(); Promiseを返す、const { data: userData, refetch } = useMe();\n      //cacheを直接修正する方法\n      client.writeFragment({\n        id: `UserEntity:${userData.me.id}`,\n        fragment: gql`\n          fragment VerifiedUser on UserEntity {\n            verified\n          }\n        `,\n        data: {\n          verified: true,\n        },\n      });\n      history.push(\"/\");\n    }\n  };\n  const [verifyTrg] = useMutation<verifyEmail, verifyEmailVariables>(\n    VERIFY_EMAIL_MUTATION,\n    {\n      onCompleted,\n    }\n  );\n  // hrefのコードを持ってくる１番目のoption\n  // const location = useLocation();\n  useEffect(() => {\n    // console.log(location.search);\n    const [_, code] = window.location.href.split(\"confirm?=\");\n    verifyTrg({\n      variables: {\n        input: {\n          code,\n        },\n      },\n    });\n  }, []);\n  return (\n    <div className=\"flex flex-col text-center h-screen mt-60\">\n      <Helmet>\n        <title>Verify Email | Higawari Eats</title>\n      </Helmet>\n      <h2 className=\"text-lg font-semibold mb-2\">\n        アカウントを認証しています。\n      </h2>\n      <h4 className=\"text-gray-700\">\n        少々お待ちください。このページから離れないでください。\n      </h4>\n    </div>\n  );\n};\n",["119","120"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/hooks/useMe.tsx",["121"],"import { gql, useQuery } from \"@apollo/client\";\nimport React from \"react\";\nimport { meQuery } from \"../__generated__/meQuery\";\n\n\nconst ME_QUERY = gql`\n  query meQuery {\n    me {\n      id\n      email\n      role\n      verified\n    }\n  }\n`;\n\nexport const useMe = () => {\n    return useQuery<meQuery>(ME_QUERY);\n};\n",["122","123"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/user/edit-profile.tsx",["124","125"],"import { gql, useApolloClient, useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useForm } from \"react-hook-form\";\nimport { Button } from \"../../components/button\";\nimport { FormError } from \"../../components/form-error\";\nimport { useMe } from \"../../hooks/useMe\";\nimport {\n  editProfile,\n  editProfileVariables,\n} from \"../../__generated__/editProfile\";\n\nconst EDIT_PROFILE_MUTATION = gql`\n  mutation editProfile($input: EditProfileInput!) {\n    editProfile(input: $input) {\n      error\n      ok\n    }\n  }\n`;\n\ninterface IFormProps {\n  email?: string;\n  password?: string;\n}\n\nexport const EditProfile = () => {\n  const client = useApolloClient();\n  const { data: userData } = useMe();\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    formState,\n    errors,\n  } = useForm<IFormProps>({\n    mode: \"onChange\",\n    defaultValues: {\n      email: userData?.me.email,\n    },\n  });\n  const onSubmit = () => {\n    const { email, password } = getValues();\n    editProfileTrg({\n      variables: {\n        input: {\n          email,\n          ...(password !== \"\" && { password }),\n        },\n      },\n    });\n  };\n  const onCompleted = (data: editProfile) => {\n    const {\n      editProfile: { ok },\n    } = data;\n    if (ok && userData) {\n      const {\n        me: { email: prevEmail, id },\n      } = userData;\n      const { email: newEmail } = getValues();\n      if (prevEmail !== newEmail) {\n        client.writeFragment({\n          id: `UserEntity:${id}`,\n          fragment: gql`\n            fragment EditedUser on UserEntity {\n              verified\n              email\n            }\n          `,\n          data: {\n            email: newEmail,\n            verified: false,\n          },\n        });\n      }\n    }\n  };\n  const [editProfileTrg, { data, loading, error }] = useMutation<\n    editProfile,\n    editProfileVariables\n  >(EDIT_PROFILE_MUTATION, {\n    onCompleted,\n  });\n  return (\n    <div className=\"flex flex-col h-screen mt-52 items-center px-5\">\n      <Helmet>\n        <title>Edit Profile | Higawari Eats</title>\n      </Helmet>\n      <h4 className=\"font-semibold text-2xl mb-3\">プロフィール</h4>\n      <form\n        className=\"grid gap-3 mt-5 w-full max-w-screen-sm mb-4\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <input\n          ref={register({\n            required: \"メールを入力して下さい。\",\n            pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          })}\n          required\n          name=\"email\"\n          placeholder=\"メール\"\n          type=\"email\"\n          className=\"inputCss\"\n        />\n        {errors.email?.type === \"pattern\" && (\n          <FormError\n            errorMessage={\"メールの形式に合わせてご入力して下さい。\"}\n          />\n        )}\n        {errors.email?.message && (\n          <FormError errorMessage={errors.email?.message} />\n        )}\n        <input\n          ref={register({\n            minLength: 8,\n          })}\n          name=\"password\"\n          placeholder=\"パスワード\"\n          type=\"password\"\n          className=\"inputCss\"\n        />\n        {errors.password?.type === \"minLength\" && (\n          <FormError errorMessage={\"パスワードを8文字以上入力して下さい。\"} />\n        )}\n        {errors.password?.message && (\n          <FormError errorMessage={errors.password?.message} />\n        )}\n        <Button\n          canClick={formState.isValid}\n          loading={loading}\n          actionText={\"更新\"}\n        />\n      </form>\n    </div>\n  );\n};\n",["126","127"],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/components/restaurant.tsx",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/client/search.tsx",["128","129"],"import { gql, useLazyQuery } from \"@apollo/client\";\nimport React, { useEffect } from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { RESTAURANT_FRAGMENT } from \"../../fragments\";\nimport {\n  searchRestaurant,\n  searchRestaurantVariables,\n} from \"../../__generated__/searchRestaurant\";\n\nconst SEARCH_RESTAURANT = gql`\n  query searchRestaurant($input: SearchRestaurantInput!) {\n    searchRestaurant(input: $input) {\n      ok\n      error\n      totalPages\n      totalResults\n      restaurants {\n        ...RestaurantParts\n      }\n    }\n  }\n  ${RESTAURANT_FRAGMENT}\n`;\n\nexport const Search = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //lazy query\n  //lazy queryは一般的なqueryとは違う物を返す => queryTuple\n  const [queryReady, { loading, data, called }] = useLazyQuery<\n    searchRestaurant,\n    searchRestaurantVariables\n  >(SEARCH_RESTAURANT);\n  useEffect(() => {\n    const [_, query] = location.search.split(\"?term=\");\n    if (!query) {\n      //history.push & history.replaceの違いはreplaceの場合history APIに追加されない（履歴）\n      return history.replace(\"/\");\n    }\n    queryReady({\n      variables: {\n        input: {\n          page: 1,\n          query,\n        },\n      },\n    });\n  }, [history, location.search]);\n  console.log(loading, data, called);\n  return (\n    <div>\n      <Helmet>\n        <title>Search | Higawari Eats</title>\n      </Helmet>\n      search page\n    </div>\n  );\n};\n","/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/constants.ts",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/__generated__/globalTypes.ts",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/fragments.ts",[],"/Users/takeo/code/React/ReactJS/higawari-eats-frontend/src/pages/client/category.tsx",["130","131"],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"132","replacedBy":"136"},{"ruleId":"134","replacedBy":"137"},{"ruleId":"132","replacedBy":"138"},{"ruleId":"134","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":77,"column":9,"nodeType":"142","endLine":77,"endColumn":58},{"ruleId":"132","replacedBy":"143"},{"ruleId":"134","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":56,"column":16,"nodeType":"147","messageId":"148","endLine":56,"endColumn":21},{"ruleId":"132","replacedBy":"149"},{"ruleId":"134","replacedBy":"150"},{"ruleId":"145","severity":1,"message":"151","line":4,"column":22,"nodeType":"147","messageId":"148","endLine":4,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":26,"column":22,"nodeType":"147","messageId":"148","endLine":26,"endColumn":27},{"ruleId":"145","severity":1,"message":"152","line":56,"column":12,"nodeType":"147","messageId":"148","endLine":56,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":64,"column":6,"nodeType":"155","endLine":64,"endColumn":8,"suggestions":"156"},{"ruleId":"132","replacedBy":"157"},{"ruleId":"134","replacedBy":"158"},{"ruleId":"145","severity":1,"message":"159","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"132","replacedBy":"160"},{"ruleId":"134","replacedBy":"161"},{"ruleId":"145","severity":1,"message":"162","line":79,"column":28,"nodeType":"147","messageId":"148","endLine":79,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":79,"column":43,"nodeType":"147","messageId":"148","endLine":79,"endColumn":48},{"ruleId":"132","replacedBy":"163"},{"ruleId":"134","replacedBy":"164"},{"ruleId":"145","severity":1,"message":"152","line":36,"column":12,"nodeType":"147","messageId":"148","endLine":36,"endColumn":13},{"ruleId":"153","severity":1,"message":"165","line":49,"column":6,"nodeType":"155","endLine":49,"endColumn":32,"suggestions":"166"},{"ruleId":"145","severity":1,"message":"167","line":2,"column":10,"nodeType":"147","messageId":"148","endLine":2,"endColumn":19},{"ruleId":"145","severity":1,"message":"151","line":3,"column":10,"nodeType":"147","messageId":"148","endLine":3,"endColumn":21},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],["168"],["169"],["168"],["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["168"],["169"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["168"],["169"],"'useLocation' is defined but never used.","'_' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyTrg'. Either include it or remove the dependency array.","ArrayExpression",["170"],["168"],["169"],"'React' is defined but never used.",["168"],["169"],"'data' is assigned a value but never used.",["168"],["169"],"React Hook useEffect has a missing dependency: 'queryReady'. Either include it or remove the dependency array.",["171"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [verifyTrg]",{"range":"176","text":"177"},"Update the dependencies array to be: [history, location.search, queryReady]",{"range":"178","text":"179"},[1634,1636],"[verifyTrg]",[1269,1295],"[history, location.search, queryReady]"]